Delete every N nodes
Given a linked list and two integers M and N. Traverse the linked list such that you retain M nodes then delete next N nodes, 
continue the same until end of the linked list. 
That is, in the given linked list you need to delete N nodes after every M nodes.


Node *skipMdeleteN(Node *head, int M, int N)
{
	// Write your code here
	  if (!head || N == 0) {
        return head;
    }
if(M==0)
{
	return nullptr;
}
    Node* current = head;
    Node* prev = nullptr;

    while (current) {
        // Skip M nodes
        for (int i = 1; i < M && current; i++) {
            current = current->next;
        }

        if (current == nullptr) {
            return head;
        }

      Node* temp = current->next;

        // Delete N nodes
        for (int i = 0; i < N && temp; i++) {
            Node* nextNode = temp->next;
            delete temp;
            temp = nextNode;
        }

  
        current->next = temp;
        current = temp;
    }

    return head;
}

	
